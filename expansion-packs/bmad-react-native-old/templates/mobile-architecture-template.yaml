template:
  id: mobile-architecture-template-v1
  name: Mobile Architecture Document
  version: 1.0
  output:
    format: markdown
    filename: "docs/{{app_name}}-mobile-architecture.md"
    title: "{{app_title}} Mobile Architecture"

workflow:
  mode: interactive

sections:
  - id: initial-setup
    instruction: |
      This template creates a comprehensive Mobile Architecture Document specifically designed for React Native cross-platform applications. The document defines the technical architecture, platform considerations, and implementation strategies needed for successful iOS and Android development.
      
      This document serves as the technical blueprint for the development team and guides all architectural decisions throughout the project lifecycle.

  - id: architecture-overview
    title: Architecture Overview
    instruction: Provide a high-level overview of the mobile application architecture. Present each subsection and gather user feedback before proceeding.
    sections:
      - id: architectural-vision
        title: Architectural Vision
        instruction: Define the core architectural principles and goals for the mobile application
        template: |
          **Architecture Philosophy:** {{architectural_approach_description}}
          **Key Principles:**
          - {{principle_1}}: {{description_and_rationale}}
          - {{principle_2}}: {{description_and_rationale}}
          - {{principle_3}}: {{description_and_rationale}}
          
          **Cross-Platform Strategy:** {{shared_code_vs_platform_specific_approach}}
      - id: technology-stack
        title: Technology Stack
        template: |
          **Core Framework:** React Native {{version}}
          **Development Environment:** {{react_native_cli_expo_bare_workflow}}
          **Language:** TypeScript {{version}}
          **Build Tools:** {{metro_babel_flipper_configuration}}
          
          **State Management:** {{redux_zustand_context_mobx}}
          **Navigation:** React Navigation {{version}}
          **Styling:** {{styled_components_stylesheet_nativewind}}
          **Testing:** {{jest_testing_library_detox_configuration}}
      - id: platform-strategy
        title: Platform Strategy
        template: |
          **iOS Platform:**
          - Minimum Version: iOS {{min_ios_version}}
          - Target Devices: {{iphone_ipad_support}}
          - Native Modules: {{ios_specific_native_modules}}
          
          **Android Platform:**
          - Minimum API Level: {{min_api_level}}
          - Target Devices: {{phone_tablet_support}}
          - Native Modules: {{android_specific_native_modules}}
          
          **Code Sharing:**
          - Shared Business Logic: {{percentage_shared}}%
          - Platform-Specific UI: {{platform_specific_ui_percentage}}%
          - Native Bridge Usage: {{native_module_strategy}}

  - id: application-architecture
    title: Application Architecture
    instruction: Define the overall application structure and architectural patterns
    sections:
      - id: architectural-patterns
        title: Architectural Patterns
        template: |
          **Primary Pattern:** {{mvvm_mvc_clean_architecture_etc}}
          **Rationale:** {{why_this_pattern_was_chosen}}
          
          **Component Architecture:**
          - Presentation Layer: {{react_components_structure}}
          - Business Logic Layer: {{services_hooks_utilities}}
          - Data Layer: {{api_storage_caching_strategy}}
          
          **Cross-Cutting Concerns:**
          - Error Handling: {{error_boundary_crash_reporting}}
          - Logging: {{logging_strategy_and_tools}}
          - Performance Monitoring: {{performance_tracking_approach}}
      - id: folder-structure
        title: Folder Structure
        template: |
          ```
          src/
          ├── components/           # Reusable UI components
          │   ├── common/          # Platform-agnostic components
          │   ├── ios/             # iOS-specific components
          │   └── android/         # Android-specific components
          ├── screens/             # Screen components
          │   ├── {{screen_category_1}}/
          │   └── {{screen_category_2}}/
          ├── navigation/          # Navigation configuration
          │   ├── {{navigation_structure}}
          ├── services/            # Business logic and API calls
          │   ├── api/            # API communication
          │   ├── storage/        # Local storage
          │   └── analytics/      # Analytics and tracking
          ├── store/              # State management
          │   ├── {{state_structure}}
          ├── utils/              # Utility functions
          │   ├── platform/       # Platform-specific utilities
          │   └── helpers/        # Common helpers
          ├── types/              # TypeScript type definitions
          ├── constants/          # App constants and configuration
          └── assets/             # Images, fonts, and static files
          ```
      - id: component-architecture
        title: Component Architecture
        template: |
          **Component Hierarchy:**
          - Screen Components: {{screen_component_responsibilities}}
          - Container Components: {{container_component_pattern}}
          - Presentation Components: {{pure_component_strategy}}
          - Common Components: {{reusable_component_library}}
          
          **Component Communication:**
          - Props Flow: {{props_drilling_vs_context}}
          - Event Handling: {{event_system_design}}
          - State Lifting: {{state_management_strategy}}
          
          **Platform-Specific Components:**
          - iOS Components: {{ios_specific_component_needs}}
          - Android Components: {{android_specific_component_needs}}
          - Shared Interface: {{platform_abstraction_strategy}}

  - id: state-management
    title: State Management Architecture
    instruction: Define how application state is managed across platforms
    sections:
      - id: state-management-strategy
        title: State Management Strategy
        template: |
          **Primary State Manager:** {{redux_zustand_context_etc}}
          **State Structure:**
          
          ```typescript
          interface AppState {
            // {{state_structure_description}}
            {{state_interface_example}}
          }
          ```
          
          **State Flow:**
          - Actions: {{action_creation_and_dispatch}}
          - Reducers/Updates: {{state_update_mechanism}}
          - Selectors: {{state_selection_and_memoization}}
      - id: local-state-vs-global-state
        title: Local vs Global State
        template: |
          **Global State ({{global_state_tool}}):**
          - User Authentication: {{auth_state_management}}
          - App Configuration: {{config_state_management}}
          - Cross-Screen Data: {{shared_data_management}}
          
          **Local State (React State/Hooks):**
          - Form Input: {{form_state_management}}
          - UI State: {{ui_state_management}}
          - Component-Specific Data: {{local_data_management}}
          
          **State Persistence:**
          - Persistent State: {{which_state_persists}}
          - Storage Mechanism: {{async_storage_keychain_etc}}
          - Hydration Strategy: {{state_rehydration_approach}}
      - id: data-flow
        title: Data Flow Architecture
        template: |
          **Unidirectional Data Flow:**
          ```
          {{data_flow_diagram_description}}
          ```
          
          **API Data Management:**
          - Data Fetching: {{api_calling_strategy}}
          - Caching Strategy: {{data_caching_approach}}
          - Optimistic Updates: {{optimistic_update_handling}}
          - Error Handling: {{api_error_management}}

  - id: navigation-architecture
    title: Navigation Architecture
    instruction: Define the navigation structure and flow between screens
    sections:
      - id: navigation-structure
        title: Navigation Structure
        template: |
          **Navigation Library:** React Navigation {{version}}
          **Navigation Pattern:** {{tab_stack_drawer_modal}}
          
          **Navigation Hierarchy:**
          ```
          {{navigation_tree_structure}}
          ```
          
          **Deep Linking:**
          - URL Scheme: {{app_url_scheme}}
          - Route Configuration: {{deep_link_routes}}
          - Platform Integration: {{universal_links_app_links}}
      - id: screen-transitions
        title: Screen Transitions
        template: |
          **iOS Transitions:**
          - Navigation Style: {{ios_navigation_style}}
          - Custom Transitions: {{ios_custom_transitions}}
          - Modal Presentation: {{ios_modal_style}}
          
          **Android Transitions:**
          - Navigation Style: {{android_navigation_style}}
          - Custom Transitions: {{android_custom_transitions}}
          - Activity Transitions: {{android_activity_transitions}}
          
          **Cross-Platform:**
          - Shared Transitions: {{shared_transition_components}}
          - Platform Detection: {{platform_specific_navigation_logic}}
      - id: navigation-state
        title: Navigation State Management
        template: |
          **Navigation State:**
          - State Persistence: {{navigation_state_persistence}}
          - Deep Link Handling: {{deep_link_state_restoration}}
          - Back Button Handling: {{android_back_button_ios_swipe}}
          
          **Route Parameters:**
          - Type Safety: {{typescript_route_params}}
          - Parameter Validation: {{param_validation_strategy}}
          - Default Values: {{default_param_handling}}

  - id: data-architecture
    title: Data Architecture
    instruction: Define how data is managed, stored, and synchronized across platforms
    sections:
      - id: api-architecture
        title: API Architecture
        template: |
          **API Communication:**
          - HTTP Client: {{axios_fetch_apollo_etc}}
          - Base URL Configuration: {{api_base_url_strategy}}
          - Request/Response Interceptors: {{interceptor_logic}}
          
          **Authentication:**
          - Auth Flow: {{oauth_jwt_biometric_etc}}
          - Token Management: {{token_storage_refresh_strategy}}
          - Session Handling: {{session_management_approach}}
          
          **API Error Handling:**
          - Error Types: {{network_server_client_errors}}
          - Retry Logic: {{retry_strategy_and_backoff}}
          - Offline Handling: {{offline_error_management}}
      - id: local-storage
        title: Local Storage Architecture
        template: |
          **Storage Solutions:**
          - Simple Key-Value: {{async_storage_usage}}
          - Secure Storage: {{keychain_keystore_usage}}
          - Database: {{sqlite_realm_watermelondb_etc}}
          - File System: {{file_storage_strategy}}
          
          **Data Persistence Strategy:**
          - User Preferences: {{preference_storage_approach}}
          - App Data: {{app_data_storage_strategy}}
          - Cache Management: {{cache_invalidation_strategy}}
          - Migration Handling: {{data_migration_between_versions}}
      - id: offline-strategy
        title: Offline Strategy
        template: |
          **Offline Capabilities:**
          - Read-Only Mode: {{offline_data_access}}
          - Write Operations: {{offline_write_strategy}}
          - Sync Strategy: {{online_sync_approach}}
          
          **Conflict Resolution:**
          - Conflict Detection: {{conflict_detection_mechanism}}
          - Resolution Strategy: {{last_write_wins_manual_merge_etc}}
          - User Notification: {{conflict_notification_approach}}
          
          **Network Detection:**
          - Connection Monitoring: {{network_state_detection}}
          - Quality Assessment: {{network_quality_adaptation}}
          - Background Sync: {{background_sync_strategy}}

  - id: platform-specific-architecture
    title: Platform-Specific Architecture
    instruction: Define platform-specific implementations and native integrations
    sections:
      - id: ios-specific-architecture
        title: iOS-Specific Architecture
        template: |
          **iOS Native Modules:**
          - Required Modules: {{ios_native_modules_list}}
          - Bridge Communication: {{ios_bridge_strategy}}
          - Swift/Objective-C Integration: {{native_code_integration}}
          
          **iOS Platform Features:**
          - Background Processing: {{ios_background_tasks}}
          - Push Notifications: {{ios_push_notification_handling}}
          - App Extensions: {{ios_extensions_if_applicable}}
          - Keychain Integration: {{ios_keychain_usage}}
          
          **iOS UI Considerations:**
          - Safe Area Handling: {{ios_safe_area_strategy}}
          - Dynamic Island: {{ios_dynamic_island_considerations}}
          - Haptic Feedback: {{ios_haptic_implementation}}
      - id: android-specific-architecture
        title: Android-Specific Architecture
        template: |
          **Android Native Modules:**
          - Required Modules: {{android_native_modules_list}}
          - Bridge Communication: {{android_bridge_strategy}}
          - Java/Kotlin Integration: {{native_code_integration}}
          
          **Android Platform Features:**
          - Background Services: {{android_background_services}}
          - Push Notifications: {{android_push_notification_handling}}
          - Intent Handling: {{android_intent_management}}
          - Keystore Integration: {{android_keystore_usage}}
          
          **Android UI Considerations:**
          - Status Bar Handling: {{android_status_bar_strategy}}
          - Navigation Bar: {{android_navigation_bar_handling}}
          - Hardware Back Button: {{android_back_button_logic}}
      - id: cross-platform-abstraction
        title: Cross-Platform Abstraction
        template: |
          **Platform Abstraction Layer:**
          - Common Interface: {{platform_abstraction_interface}}
          - Platform Detection: {{platform_detection_strategy}}
          - Feature Availability: {{feature_availability_checks}}
          
          **Code Sharing Strategy:**
          - Business Logic: {{shared_business_logic_percentage}}%
          - UI Components: {{shared_ui_component_percentage}}%
          - Platform-Specific Code: {{platform_specific_percentage}}%
          
          **Platform-Specific Implementations:**
          ```typescript
          // {{platform_abstraction_example}}
          ```

  - id: performance-architecture
    title: Performance Architecture
    instruction: Define performance optimization strategies and monitoring approaches
    sections:
      - id: rendering-performance
        title: Rendering Performance
        template: |
          **Component Optimization:**
          - Memoization Strategy: {{react_memo_usecallback_usememo}}
          - List Rendering: {{flatlist_virtualization_strategy}}
          - Image Optimization: {{image_caching_compression_lazy_loading}}
          
          **JavaScript Thread:**
          - Bundle Splitting: {{bundle_splitting_strategy}}
          - Code Splitting: {{dynamic_imports_lazy_loading}}
          - Memory Management: {{memory_optimization_approaches}}
          
          **Native Thread:**
          - Native Module Optimization: {{native_module_performance}}
          - Bridge Communication: {{bridge_batching_optimization}}
          - Threading Strategy: {{background_thread_usage}}
      - id: startup-performance
        title: Startup Performance
        template: |
          **App Launch Optimization:**
          - Bundle Size: {{bundle_size_targets_and_monitoring}}
          - Lazy Loading: {{lazy_loading_strategy}}
          - Initial Route: {{initial_screen_optimization}}
          
          **Asset Loading:**
          - Image Assets: {{image_loading_optimization}}
          - Font Loading: {{font_loading_strategy}}
          - JavaScript Bundle: {{js_bundle_loading_optimization}}
          
          **Platform-Specific Optimization:**
          - iOS Launch Screen: {{ios_launch_screen_strategy}}
          - Android Splash Screen: {{android_splash_screen_strategy}}
          - Cold Start Optimization: {{cold_start_performance_targets}}
      - id: runtime-performance
        title: Runtime Performance
        template: |
          **Memory Management:**
          - Memory Profiling: {{memory_monitoring_strategy}}
          - Leak Prevention: {{memory_leak_prevention}}
          - Garbage Collection: {{gc_optimization_approaches}}
          
          **Network Performance:**
          - Request Optimization: {{api_request_optimization}}
          - Response Caching: {{network_caching_strategy}}
          - Background Sync: {{background_sync_optimization}}
          
          **Battery Optimization:**
          - Background Processing: {{battery_efficient_background_tasks}}
          - Location Services: {{location_optimization}}
          - Network Usage: {{network_efficiency_strategies}}

  - id: security-architecture
    title: Security Architecture
    instruction: Define security measures and data protection strategies
    sections:
      - id: data-security
        title: Data Security
        template: |
          **Data Encryption:**
          - At Rest: {{local_data_encryption_strategy}}
          - In Transit: {{network_encryption_requirements}}
          - Key Management: {{encryption_key_management}}
          
          **Sensitive Data Handling:**
          - User Credentials: {{credential_storage_strategy}}
          - Personal Information: {{pii_handling_approach}}
          - Payment Data: {{payment_security_measures}}
          
          **Platform-Specific Security:**
          - iOS Keychain: {{ios_keychain_implementation}}
          - Android Keystore: {{android_keystore_implementation}}
          - Biometric Authentication: {{biometric_security_integration}}
      - id: api-security
        title: API Security
        template: |
          **Authentication & Authorization:**
          - Auth Mechanism: {{oauth_jwt_api_key_etc}}
          - Token Security: {{token_storage_transmission}}
          - Session Management: {{session_security_measures}}
          
          **API Protection:**
          - Request Signing: {{api_request_signing}}
          - Rate Limiting: {{client_side_rate_limiting}}
          - Certificate Pinning: {{certificate_pinning_strategy}}
          
          **Man-in-the-Middle Protection:**
          - SSL/TLS Configuration: {{ssl_configuration}}
          - Certificate Validation: {{certificate_validation_approach}}
          - Network Security: {{network_security_measures}}
      - id: app-security
        title: Application Security
        template: |
          **Code Protection:**
          - Obfuscation: {{code_obfuscation_strategy}}
          - Anti-Tampering: {{app_integrity_protection}}
          - Debug Protection: {{production_debug_prevention}}
          
          **Runtime Security:**
          - Root/Jailbreak Detection: {{root_jailbreak_handling}}
          - Screen Recording Protection: {{screen_recording_prevention}}
          - Background App Security: {{background_app_security}}
          
          **Privacy Protection:**
          - Data Minimization: {{data_collection_minimization}}
          - User Consent: {{privacy_consent_management}}
          - Data Retention: {{data_retention_policies}}

  - id: testing-architecture
    title: Testing Architecture
    instruction: Define testing strategies and frameworks for the mobile application
    sections:
      - id: testing-strategy
        title: Testing Strategy
        template: |
          **Testing Pyramid:**
          - Unit Tests: {{unit_test_coverage_target}}% coverage
          - Integration Tests: {{integration_test_scope}}
          - End-to-End Tests: {{e2e_test_coverage}}
          
          **Testing Frameworks:**
          - Unit Testing: {{jest_testing_library_configuration}}
          - Integration Testing: {{integration_testing_approach}}
          - E2E Testing: {{detox_appium_configuration}}
          
          **Platform-Specific Testing:**
          - iOS Testing: {{ios_specific_testing_approach}}
          - Android Testing: {{android_specific_testing_approach}}
          - Cross-Platform Testing: {{shared_testing_strategy}}
      - id: test-automation
        title: Test Automation
        template: |
          **Continuous Integration:**
          - CI/CD Pipeline: {{ci_cd_platform_and_configuration}}
          - Automated Testing: {{automated_test_execution}}
          - Test Reporting: {{test_result_reporting}}
          
          **Device Testing:**
          - Simulator/Emulator Testing: {{simulator_testing_strategy}}
          - Real Device Testing: {{real_device_testing_approach}}
          - Cloud Testing: {{cloud_testing_services}}
          
          **Performance Testing:**
          - Load Testing: {{load_testing_strategy}}
          - Stress Testing: {{stress_testing_approach}}
          - Memory Testing: {{memory_testing_tools}}
      - id: quality-assurance
        title: Quality Assurance
        template: |
          **Code Quality:**
          - Linting: {{eslint_tslint_configuration}}
          - Code Formatting: {{prettier_formatting_rules}}
          - Type Safety: {{typescript_strict_mode_configuration}}
          
          **Review Process:**
          - Code Reviews: {{code_review_process}}
          - Architecture Reviews: {{architecture_review_process}}
          - Security Reviews: {{security_review_process}}
          
          **Quality Metrics:**
          - Code Coverage: {{code_coverage_targets}}
          - Performance Benchmarks: {{performance_benchmarking}}
          - Bug Tracking: {{bug_tracking_and_resolution}}

  - id: deployment-architecture
    title: Deployment Architecture
    instruction: Define deployment strategies and app store submission processes
    sections:
      - id: build-process
        title: Build Process
        template: |
          **Build Configuration:**
          - Development Builds: {{dev_build_configuration}}
          - Staging Builds: {{staging_build_configuration}}
          - Production Builds: {{production_build_configuration}}
          
          **Platform-Specific Builds:**
          - iOS Build Process: {{ios_build_steps_and_configuration}}
          - Android Build Process: {{android_build_steps_and_configuration}}
          - Code Signing: {{code_signing_strategy}}
          
          **Build Optimization:**
          - Bundle Splitting: {{bundle_splitting_for_production}}
          - Asset Optimization: {{asset_optimization_process}}
          - Size Optimization: {{app_size_optimization}}
      - id: distribution-strategy
        title: Distribution Strategy
        template: |
          **App Store Distribution:**
          - iOS App Store: {{ios_app_store_strategy}}
          - Google Play Store: {{android_play_store_strategy}}
          - Beta Distribution: {{testflight_play_console_beta}}
          
          **Internal Distribution:**
          - Development Distribution: {{internal_dev_distribution}}
          - QA Distribution: {{qa_testing_distribution}}
          - Stakeholder Distribution: {{stakeholder_review_distribution}}
          
          **Release Management:**
          - Version Strategy: {{version_numbering_strategy}}
          - Release Cadence: {{release_schedule_and_process}}
          - Rollback Strategy: {{rollback_and_hotfix_process}}
      - id: monitoring-observability
        title: Monitoring and Observability
        template: |
          **Application Monitoring:**
          - Crash Reporting: {{crashlytics_sentry_configuration}}
          - Performance Monitoring: {{performance_monitoring_tools}}
          - User Analytics: {{analytics_platform_and_events}}
          
          **Infrastructure Monitoring:**
          - API Monitoring: {{api_performance_monitoring}}
          - Third-Party Service Monitoring: {{third_party_service_monitoring}}
          - Alert Configuration: {{alerting_strategy_and_thresholds}}
          
          **User Experience Monitoring:**
          - Session Tracking: {{session_tracking_implementation}}
          - Feature Usage: {{feature_usage_analytics}}
          - User Feedback: {{feedback_collection_and_analysis}}

  - id: appendices
    title: Appendices
    sections:
      - id: technical-decisions
        title: Technical Decision Log
        instruction: Document key architectural decisions and their rationale
        type: table
        template: |
          | Decision | Date | Rationale | Alternatives Considered | Impact |
          | -------- | ---- | --------- | ---------------------- | ------ |
          | {{decision}} | {{date}} | {{rationale}} | {{alternatives}} | {{impact}} |
      - id: third-party-dependencies
        title: Third-Party Dependencies
        instruction: List all external dependencies and their purposes
        type: table
        template: |
          | Dependency | Version | Purpose | License | Risk Assessment |
          | ---------- | ------- | ------- | ------- | --------------- |
          | {{dependency}} | {{version}} | {{purpose}} | {{license}} | {{risk}} |
      - id: platform-apis
        title: Platform API Usage
        instruction: Document usage of platform-specific APIs and permissions
      - id: performance-benchmarks
        title: Performance Benchmarks
        instruction: Include performance targets and benchmarking results
      - id: change-log
        title: Change Log
        instruction: Track document versions and architectural changes
        type: table
        template: |
          | Date | Version | Description | Author |
          | :--- | :------ | :---------- | :----- |