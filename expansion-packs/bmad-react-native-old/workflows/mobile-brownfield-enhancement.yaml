workflow:
  id: mobile-brownfield-enhancement
  name: Mobile App Enhancement - React Native Brownfield Project
  description: Specialized workflow for enhancing, refactoring, or adding features to existing React Native applications. Guides teams through mobile app analysis, feature planning, cross-platform updates, and safe deployment to existing app store listings.
  type: brownfield
  project_types:
    - existing-mobile-app
    - react-native-upgrade
    - feature-enhancement
    - performance-optimization
    - platform-migration
    - legacy-mobile-refactor
    - app-store-optimization
  
  enhancement_sequence:
    - agent: mobile-analyst
      creates: mobile-app-analysis.md
      optional_steps:
        - existing_app_audit
        - competitor_feature_analysis
        - user_feedback_analysis
        - app_store_performance_review
      notes: 'Analyze existing mobile app including current architecture, user feedback, app store performance, and competitive positioning. SAVE OUTPUT: Copy final mobile-app-analysis.md to your project''s docs/mobile/ folder.'
    
    - agent: mobile-pm
      creates: mobile-enhancement-prd.md
      requires: mobile-app-analysis.md
      optional_steps:
        - feature_impact_analysis
        - mobile_user_research
        - app_store_optimization_strategy
      notes: 'Create enhancement PRD defining new features, improvements, and mobile strategy updates. Include impact on existing users and app store optimization. SAVE OUTPUT: Copy final mobile-enhancement-prd.md to your project''s docs/mobile/ folder.'
    
    - agent: mobile-architect
      creates: mobile-enhancement-architecture.md
      requires: mobile-enhancement-prd.md
      optional_steps:
        - existing_architecture_review
        - technical_debt_assessment
        - performance_improvement_analysis
        - migration_strategy_planning
      notes: 'Design enhancement architecture considering existing React Native codebase, technical debt, and backward compatibility. Plan phased rollout strategy. SAVE OUTPUT: Copy final mobile-enhancement-architecture.md to your project''s docs/mobile/ folder.'
    
    - agent: mobile-ux
      creates: mobile-enhancement-design.md
      requires:
        - mobile-enhancement-prd.md
        - mobile-enhancement-architecture.md
      optional_steps:
        - existing_ux_audit
        - user_flow_optimization
        - accessibility_improvements
      notes: 'Design enhancements that integrate seamlessly with existing mobile app UX. Consider user adaptation and platform-specific improvements. SAVE OUTPUT: Copy final mobile-enhancement-design.md to your project''s docs/mobile/ folder.'
    
    - agent: mobile-qa
      creates: mobile-testing-strategy.md
      requires: all_enhancement_documents
      optional_steps:
        - regression_testing_planning
        - device_compatibility_testing
        - app_store_submission_testing
      notes: 'Create comprehensive testing strategy for brownfield enhancements including regression testing, device compatibility, and app store submission validation. SAVE OUTPUT: Copy final mobile-testing-strategy.md to your project''s docs/mobile/ folder.'
    
    - agent: mobile-po
      validates: enhancement_consistency
      requires: all_enhancement_documents
      uses: mobile-brownfield-checklist
      notes: Validate all enhancement documents for consistency with existing app, user impact assessment, and safe deployment strategy. May require updates to any document.
    
    - agent: various
      updates: flagged_enhancement_documents
      condition: brownfield_validation_issues
      notes: If brownfield validation finds issues, return to relevant mobile agent to fix and re-export updated documents to docs/mobile/ folder.
  
  mobile_enhancement_implementation:
    action: guide_brownfield_development
    notes: Set up enhancement development environment with existing React Native project. Plan feature flags, gradual rollout, and rollback strategies for safe production deployment.
  
  workflow_end:
    action: move_to_enhancement_story_development
    notes: All mobile enhancement artifacts complete. Begin story-driven development phase. Use Mobile Scrum Master to create implementation stories prioritized for safe brownfield deployment.
  
  rapid_enhancement_sequence:
    - step: enhancement_scope_assessment
      action: assess_enhancement_complexity
      notes: First, assess if this needs full brownfield planning (use enhancement_sequence) or can be rapid feature addition with minimal documentation.
    
    - agent: mobile-pm
      creates: feature-enhancement-brief.md
      optional_steps:
        - quick_impact_analysis
        - minimal_user_research
      notes: 'Create focused enhancement brief for rapid development. Emphasize user value and technical feasibility within existing app constraints. SAVE OUTPUT: Copy final feature-enhancement-brief.md to your project''s docs/mobile/ folder.'
    
    - agent: mobile-architect
      creates: rapid-enhancement-plan.md
      uses: create-doc mobile-enhancement-template OR mobile-architecture-design
      requires: feature-enhancement-brief.md
      notes: Create minimal enhancement plan or jump directly to implementation planning for rapid development. Choose based on feature complexity and risk level.
  
  rapid_workflow_end:
    action: move_to_immediate_enhancement_implementation
    notes: Rapid enhancement defined with safety considerations. Begin immediate implementation with Mobile Developer. Focus on feature flags and safe deployment to existing user base.
  
  flow_diagram: |
    ```mermaid
    graph TD
        A[Start: Mobile App Enhancement] --> B{Enhancement Scope?}
        B -->|Major Features/Refactor| C[mobile-analyst: mobile-app-analysis.md]
        B -->|Minor Features/Quick Updates| D[mobile-pm: feature-enhancement-brief.md]

        C --> E[mobile-pm: mobile-enhancement-prd.md]
        E --> F[mobile-architect: mobile-enhancement-architecture.md]
        F --> G[mobile-ux: mobile-enhancement-design.md]
        G --> H[mobile-qa: mobile-testing-strategy.md]
        H --> I[mobile-po: validate enhancement consistency]
        I --> J{Brownfield validation issues?}
        J -->|Yes| K[Return to relevant mobile agent for fixes]
        J -->|No| L[Set up enhancement development environment]
        K --> I
        L --> M[Move to Enhancement Story Development]

        D --> N[mobile-architect: rapid-enhancement-plan.md]
        N --> O[Move to Immediate Enhancement Implementation]

        C -.-> C1[Optional: existing app audit]
        C -.-> C2[Optional: competitor feature analysis]
        E -.-> E1[Optional: feature impact analysis]
        F -.-> F1[Optional: technical debt assessment]
        G -.-> G1[Optional: existing UX audit]
        H -.-> H1[Optional: regression testing planning]
        D -.-> D1[Optional: quick impact analysis]

        style M fill:#90EE90
        style O fill:#90EE90
        style C fill:#FFE4B5
        style E fill:#FFE4B5
        style F fill:#FFE4B5
        style G fill:#FFE4B5
        style H fill:#FFE4B5
        style D fill:#FFB6C1
        style N fill:#FFB6C1
    ```
  
  decision_guidance:
    use_full_sequence_when:
      - Major feature additions or app redesigns
      - Performance optimization or technical debt reduction
      - Platform migration (Expo to bare React Native or vice versa)
      - Multiple team members involved in enhancement
      - Changes affecting core app architecture
      - App store optimization or major UX improvements
      - Integration of new native modules or third-party services
      - Compliance updates or security enhancements
    use_rapid_sequence_when:
      - Minor feature additions or bug fixes
      - UI/UX tweaks or content updates
      - Solo developer or very small team
      - Low-risk changes with minimal user impact
      - A/B testing features or experimental functionality
      - Configuration changes or feature flag updates
  
  handoff_prompts:
    analyst_to_pm: Mobile app analysis complete. Save it as docs/mobile/mobile-app-analysis.md in your project, then create the enhancement PRD.
    pm_to_architect: Enhancement PRD ready. Save it as docs/mobile/mobile-enhancement-prd.md, then design the enhancement architecture.
    architect_to_ux: Enhancement architecture complete. Save it as docs/mobile/mobile-enhancement-architecture.md, then create the enhancement design.
    ux_to_qa: Enhancement design complete. Save it as docs/mobile/mobile-enhancement-design.md, then create the testing strategy.
    qa_to_po: Testing strategy ready. Save it as docs/mobile/mobile-testing-strategy.md. Please validate all enhancement documents for brownfield consistency.
    validation_issues: Brownfield validation found issues with [document]. Please return to [mobile-agent] to fix and re-save the updated document.
    full_complete: All enhancement artifacts validated and saved. Set up enhancement development environment and move to story development phase.
    rapid_pm_to_architect: Feature enhancement brief complete. Save it as docs/mobile/feature-enhancement-brief.md, then create rapid enhancement plan.
    rapid_complete: Rapid enhancement defined with safety considerations. Begin immediate implementation with feature flags and safe deployment strategy.
  
  mobile_brownfield_considerations:
    existing_user_impact:
      - Analyze impact on current user workflows and habits
      - Plan user education and onboarding for new features
      - Consider backward compatibility and graceful degradation
      - Implement feature flags for gradual rollout
      - Monitor user adoption and feedback metrics
    technical_constraints:
      - Work within existing React Native version and dependencies
      - Respect existing architecture patterns and code standards
      - Plan for existing data migration and schema updates
      - Consider bundle size impact and performance implications
      - Maintain existing integrations and third-party services
    deployment_safety:
      - Implement comprehensive regression testing
      - Plan rollback strategies and emergency procedures
      - Use staged deployment (beta users, gradual rollout)
      - Monitor crash reports and performance metrics
      - Prepare hotfix deployment procedures
  
  enhancement_story_development_guidance:
    epic_breakdown:
      - Foundation Updates - Architecture improvements and technical debt reduction
      - Core Feature Enhancements - Improvements to existing functionality
      - New Feature Implementation - Addition of new capabilities
      - User Experience Improvements - UI/UX enhancements and accessibility
      - Performance Optimization - Speed, memory, and battery improvements
      - Testing & Quality Assurance - Comprehensive testing of changes
      - Deployment & Monitoring - Safe rollout and monitoring setup
    story_creation_process:
      - Use Mobile Scrum Master to create brownfield-aware implementation stories
      - Each story should consider impact on existing functionality
      - Include thorough testing requirements for regression prevention
      - Specify rollback procedures for each major change
      - Apply mobile-brownfield-story-checklist for safety validation
      - Ensure stories include user migration and education elements
  
  mobile_enhancement_best_practices:
    safety_first_approach:
      - Always implement feature flags for new functionality
      - Create comprehensive test coverage before making changes
      - Use gradual rollout strategies (5%, 25%, 50%, 100%)
      - Monitor key metrics during and after deployment
      - Maintain ability to quickly rollback problematic changes
    user_experience_continuity:
      - Preserve familiar user workflows and navigation patterns
      - Introduce changes gradually with proper user education
      - Maintain consistent visual language and interaction patterns
      - Test changes with existing user data and edge cases
      - Provide clear migration paths for deprecated features
    technical_excellence:
      - Follow existing code standards and architectural patterns
      - Update documentation and team knowledge alongside code changes
      - Consider long-term maintenance and scalability implications
      - Plan for future enhancements and extensibility
      - Maintain or improve existing performance benchmarks
  
  success_criteria:
    enhancement_planning_complete:
      - All enhancement documents created and validated for brownfield safety
      - Enhancement architecture respects existing constraints and patterns
      - User impact thoroughly analyzed and mitigation strategies defined
      - Comprehensive testing strategy covers regression and compatibility
      - Safe deployment and rollback procedures established
    enhancement_implementation_readiness:
      - Enhancement development environment configured with existing project
      - Feature flag system implemented for safe rollout
      - Comprehensive testing framework covers existing and new functionality
      - Monitoring and alerting systems ready for deployment tracking
      - Team aligned on enhancement goals and safety procedures